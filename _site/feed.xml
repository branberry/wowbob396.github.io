<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.3">Jekyll</generator><link href="www.lostcoding.com/feed.xml" rel="self" type="application/atom+xml" /><link href="www.lostcoding.com/" rel="alternate" type="text/html" /><updated>2018-03-19T17:36:30-05:00</updated><id>www.lostcoding.com/</id><title type="html">Lost Coding</title><subtitle>Hello stranger, and welcome to my blog.  I intend to use this as a repository of my thoughts on developing different software ranging from web development to AI.  I don't claim to be an expert in any topic, but I hope to use this blog as a way for me to keep track of my programming progress and hopefully create useful tidbits of information for someone.</subtitle><entry><title type="html">The undulating journey</title><link href="www.lostcoding.com/2018/03/04/The-Undulating-Journey.html" rel="alternate" type="text/html" title="The undulating journey" /><published>2018-03-04T00:00:00-06:00</published><updated>2018-03-04T00:00:00-06:00</updated><id>www.lostcoding.com/2018/03/04/The%20Undulating%20Journey</id><content type="html" xml:base="www.lostcoding.com/2018/03/04/The-Undulating-Journey.html">&lt;p&gt;#The Undulating Journey&lt;/p&gt;

&lt;p&gt;One thing I have learned as I have grown older, and I think something everyone learns, is that very few things in life are black or white.  Very rarely is the journey of life a straight forward path.&lt;/p&gt;

&lt;p&gt;Starting off, I had very little genuine interest and had no direction when it came to computer science or software development.  It wasn’t until I had the opportunity for a software engineering internship did my passion truly grow.  With the passion came understanding; I began to understand concepts in class that appeared arcane to me, and I am to develop code that seemed impossible before. I am still barely above a novice level, but I have come a long way from where I have started.&lt;/p&gt;

&lt;p&gt;The most rewarding part of all of this, though, is how applicable software development and computer science is to my everyday life.  It is as though every problem I am faced becomes a problem that I can solve algorithmically.  I am currently reading Algorithms to Live By, and this book does an excellent job of crystallizing this notion.  The book is a fantastic read for anyone even tangentially interested in computers or software.&lt;/p&gt;

&lt;p&gt;As I continue to grow my software development skills, I have learned the importance of having a healthy mind.  The mind is a part of the body, and therefore to have a healthy mind, you must have a healthy body.  I have noted that periods of physical neglect have been accompanied with periods of decreased productivity with relation to homework and personal projects.  Not only do I notice decreased productivity, I notice many other negative psychological effects such as anxiety, poor mood, and irritability.  I have always been someone who exercises consistently, but software development has changed the way I even view exercise.  Before, it was a very competitive activity for me as I would always try to lift the most in whatever exercise I was doing.  It was a very toxic mentality for sure.  I would have less-than-optimal exercises just so I could show off, to people who most likely didn’t give a shit, just so I could get an ego boost.  Now, I see exercise simply as a way to keep my mind sharp and improve my wellbeing.  I still workout with a fairly high intensity, but I do much more cardio than I did before.  I no longer focus on the superficial aspects of exercise which has made working out more enjoyable, as now I see it as a fun activity and a personal challenge as opposed to showing off.&lt;/p&gt;

&lt;p&gt;Although I am still young (as of today I am 22), the transitory phase from a teenager to an adult teaches you so much.  For me, growing older has been an incredibly humbling and eye-opening.  In my opinion, perspective has been the most powerful teacher.  As a teenager, you tend to be more myopic.  I believed in high school that success meant being a great athlete or being popular like so many kids in high school.  In high school, it is very easy to be caught up in superficial desires which can be hard to shake as you grow older.  I have found that seeking external validation is addicting, but again, toxic.  Especially in an age of social media, external validation has become a shallow high that is trivially easy to pursue and continue to obtain.  Reading about the negative effects this can have on wellbeing as made me avoid social media altogether.&lt;/p&gt;

&lt;p&gt;I still have plenty of room to grow as a person.  Life’s greatest pleasure, for me, is the aspect of growth.  There are so many facets to life and so many skills to improve upon.  Software development has taught me that learning is something you must never stop doing.&lt;/p&gt;</content><author><name></name></author><summary type="html">#The Undulating Journey One thing I have learned as I have grown older, and I think something everyone learns, is that very few things in life are black or white. Very rarely is the journey of life a straight forward path. Starting off, I had very little genuine interest and had no direction when it came to computer science or software development. It wasn’t until I had the opportunity for a software engineering internship did my passion truly grow. With the passion came understanding; I began to understand concepts in class that appeared arcane to me, and I am to develop code that seemed impossible before. I am still barely above a novice level, but I have come a long way from where I have started. The most rewarding part of all of this, though, is how applicable software development and computer science is to my everyday life. It is as though every problem I am faced becomes a problem that I can solve algorithmically. I am currently reading Algorithms to Live By, and this book does an excellent job of crystallizing this notion. The book is a fantastic read for anyone even tangentially interested in computers or software. As I continue to grow my software development skills, I have learned the importance of having a healthy mind. The mind is a part of the body, and therefore to have a healthy mind, you must have a healthy body. I have noted that periods of physical neglect have been accompanied with periods of decreased productivity with relation to homework and personal projects. Not only do I notice decreased productivity, I notice many other negative psychological effects such as anxiety, poor mood, and irritability. I have always been someone who exercises consistently, but software development has changed the way I even view exercise. Before, it was a very competitive activity for me as I would always try to lift the most in whatever exercise I was doing. It was a very toxic mentality for sure. I would have less-than-optimal exercises just so I could show off, to people who most likely didn’t give a shit, just so I could get an ego boost. Now, I see exercise simply as a way to keep my mind sharp and improve my wellbeing. I still workout with a fairly high intensity, but I do much more cardio than I did before. I no longer focus on the superficial aspects of exercise which has made working out more enjoyable, as now I see it as a fun activity and a personal challenge as opposed to showing off. Although I am still young (as of today I am 22), the transitory phase from a teenager to an adult teaches you so much. For me, growing older has been an incredibly humbling and eye-opening. In my opinion, perspective has been the most powerful teacher. As a teenager, you tend to be more myopic. I believed in high school that success meant being a great athlete or being popular like so many kids in high school. In high school, it is very easy to be caught up in superficial desires which can be hard to shake as you grow older. I have found that seeking external validation is addicting, but again, toxic. Especially in an age of social media, external validation has become a shallow high that is trivially easy to pursue and continue to obtain. Reading about the negative effects this can have on wellbeing as made me avoid social media altogether. I still have plenty of room to grow as a person. Life’s greatest pleasure, for me, is the aspect of growth. There are so many facets to life and so many skills to improve upon. Software development has taught me that learning is something you must never stop doing.</summary></entry><entry><title type="html">My goal for 2018</title><link href="www.lostcoding.com/2018/01/16/My-Goal-for-2018.html" rel="alternate" type="text/html" title="My goal for 2018" /><published>2018-01-16T00:00:00-06:00</published><updated>2018-01-16T00:00:00-06:00</updated><id>www.lostcoding.com/2018/01/16/My%20Goal%20for%202018</id><content type="html" xml:base="www.lostcoding.com/2018/01/16/My-Goal-for-2018.html">&lt;h1 id=&quot;my-goal-for-2018&quot;&gt;My Goal for 2018&lt;/h1&gt;</content><author><name></name></author><summary type="html">My Goal for 2018</summary></entry><entry><title type="html">Consistency</title><link href="www.lostcoding.com/2018/01/13/Consistency.html" rel="alternate" type="text/html" title="Consistency" /><published>2018-01-13T00:00:00-06:00</published><updated>2018-01-13T00:00:00-06:00</updated><id>www.lostcoding.com/2018/01/13/Consistency</id><content type="html" xml:base="www.lostcoding.com/2018/01/13/Consistency.html">&lt;h1 id=&quot;consistency&quot;&gt;Consistency&lt;/h1&gt;

&lt;p&gt;A concept that I constantly grapple with in my mind is consistency.  Consistency in general is something I have always seemed to struggle with; especially when it comes to software development.  Consistency is something that is clearly an integral part in any successful endeavor and is also in itself a simple concept.  What is so difficult is actually being consistent.&lt;/p&gt;

&lt;p&gt;I have a bad habit where I constantly bounce around different project ideas, only ever scratching the surface on several software stacks, but never mastering any.  This has been historically a substantial waste of time as I never retain the knowledge of the topics that I scratch the surface of, but nevertheless dedicate a solid chunk of time on each topic.  I have become painfully aware of this and I have slowly begun to learn techniques to become more disciplined in my approach to learning and software development.&lt;/p&gt;

&lt;p&gt;The first approach, which is probably the most self-evident one, is to work on a project that interests you.  As obvious as this sounds, there is a bit of nuance to this point.  Sometimes what happens when I am deciding on what to work on, I focus on what tools that I want to use, not on the purpose or goal of the product itself.  Let me give you a generic example, I will browse around the web and stumble upon say, a popular back-end framework such as Django.  I think to myself, “Wow!  This is a really popular web framework, I should develop a product with it!”.  I then proceed to lookup how to install Django, follow a simple guide, and then quickly find myself stuck with no idea of how to move forward.  I have learned that I should focus on what I &lt;em&gt;want&lt;/em&gt; to make and not the tools themselves.&lt;/p&gt;

&lt;p&gt;The next approach to more consistent work is to limit the number of projects I am working on and limit the scope of each project.  For me, it is trivially easy to read about someone creating some fantastic AI using advanced deeplearning techniques and then want to jump into that subject.  In doing so, the scope of the project is almost instantly out of my field of knowledge and it is very demoralizing.  Instead of jumping on every AI-related project that seems interesting to me, I am taking the time to complete Andrew Ng’s Machine Learning course on Coursera to get a foundational understanding of machine learning and AI.  It is very enticing to want to jump into the deep end, but like with anything in life, you have to tread in shallow waters first.  I find that having too many projects allows me to bounce around when I begin hitting a wall on a project.  What I mean by this is that, as soon as I get stuck on a particular project, instead of taking the time to understand the problem and come up with a solution, I will look for a project with a simpler problem to solve or task to complete.  What ends of happening is that I finish all of the easy work and I am left with a bunch of convoluted issues that I have a hard time solving because I never put much time into any one problem.&lt;/p&gt;

&lt;p&gt;With that being said, there are a few things I need to work on to improve my overall consistency and productivity.  Right now, I have a fairly disorganized work schedule and work plan.  Typically when I work on my projects, I think of something I want to add or change on the spot and go from there.  I just recently created an account with Trello and will give that a shot.  My issue with sites like Trello is that I find the work creating the plan to be too much of a hassle and would rather just work on my project, but this is something I want to change.  I know that dedicating time to strategizing is just as, if not more important than solely working on the project. Planning something I especially need to work on as it gives me much needed structure.&lt;/p&gt;

&lt;p&gt;Lastly,  I believe having a vision of what problem you want to solve and how you plan on solving it is a key to maintaining consistency.  Having a vision is useful because it tethers you to the project at every step.  It makes being stuck at a conceptual wall worth pushing against as you know that the growing pain will be ultimately worth it.&lt;/p&gt;

&lt;p&gt;To condense this post down, consistency is clearly important and learning how to be more consistent is, at least for me, difficult at times.  I have definitely become more consistent with my work as I have shifted my approach to working on a project.  I believe having a good vision and an organized workflow as an integral part of being consistent, and more importantly, being successful with your personal projects.&lt;/p&gt;</content><author><name></name></author><summary type="html">Consistency A concept that I constantly grapple with in my mind is consistency. Consistency in general is something I have always seemed to struggle with; especially when it comes to software development. Consistency is something that is clearly an integral part in any successful endeavor and is also in itself a simple concept. What is so difficult is actually being consistent. I have a bad habit where I constantly bounce around different project ideas, only ever scratching the surface on several software stacks, but never mastering any. This has been historically a substantial waste of time as I never retain the knowledge of the topics that I scratch the surface of, but nevertheless dedicate a solid chunk of time on each topic. I have become painfully aware of this and I have slowly begun to learn techniques to become more disciplined in my approach to learning and software development. The first approach, which is probably the most self-evident one, is to work on a project that interests you. As obvious as this sounds, there is a bit of nuance to this point. Sometimes what happens when I am deciding on what to work on, I focus on what tools that I want to use, not on the purpose or goal of the product itself. Let me give you a generic example, I will browse around the web and stumble upon say, a popular back-end framework such as Django. I think to myself, “Wow! This is a really popular web framework, I should develop a product with it!”. I then proceed to lookup how to install Django, follow a simple guide, and then quickly find myself stuck with no idea of how to move forward. I have learned that I should focus on what I want to make and not the tools themselves. The next approach to more consistent work is to limit the number of projects I am working on and limit the scope of each project. For me, it is trivially easy to read about someone creating some fantastic AI using advanced deeplearning techniques and then want to jump into that subject. In doing so, the scope of the project is almost instantly out of my field of knowledge and it is very demoralizing. Instead of jumping on every AI-related project that seems interesting to me, I am taking the time to complete Andrew Ng’s Machine Learning course on Coursera to get a foundational understanding of machine learning and AI. It is very enticing to want to jump into the deep end, but like with anything in life, you have to tread in shallow waters first. I find that having too many projects allows me to bounce around when I begin hitting a wall on a project. What I mean by this is that, as soon as I get stuck on a particular project, instead of taking the time to understand the problem and come up with a solution, I will look for a project with a simpler problem to solve or task to complete. What ends of happening is that I finish all of the easy work and I am left with a bunch of convoluted issues that I have a hard time solving because I never put much time into any one problem. With that being said, there are a few things I need to work on to improve my overall consistency and productivity. Right now, I have a fairly disorganized work schedule and work plan. Typically when I work on my projects, I think of something I want to add or change on the spot and go from there. I just recently created an account with Trello and will give that a shot. My issue with sites like Trello is that I find the work creating the plan to be too much of a hassle and would rather just work on my project, but this is something I want to change. I know that dedicating time to strategizing is just as, if not more important than solely working on the project. Planning something I especially need to work on as it gives me much needed structure. Lastly, I believe having a vision of what problem you want to solve and how you plan on solving it is a key to maintaining consistency. Having a vision is useful because it tethers you to the project at every step. It makes being stuck at a conceptual wall worth pushing against as you know that the growing pain will be ultimately worth it. To condense this post down, consistency is clearly important and learning how to be more consistent is, at least for me, difficult at times. I have definitely become more consistent with my work as I have shifted my approach to working on a project. I believe having a good vision and an organized workflow as an integral part of being consistent, and more importantly, being successful with your personal projects.</summary></entry><entry><title type="html">My programming goals for 2018</title><link href="www.lostcoding.com/2018/01/11/My-Programming-Goals-for-2018.html" rel="alternate" type="text/html" title="My programming goals for 2018" /><published>2018-01-11T00:00:00-06:00</published><updated>2018-01-11T00:00:00-06:00</updated><id>www.lostcoding.com/2018/01/11/My%20Programming%20Goals%20for%202018</id><content type="html" xml:base="www.lostcoding.com/2018/01/11/My-Programming-Goals-for-2018.html">&lt;h1 id=&quot;my-programming-goals-for-2018&quot;&gt;My Programming Goals for 2018&lt;/h1&gt;

&lt;p&gt;2017 for me was a very successful year in many ways.  It was successful for me because my first internship allowed me to grow substantially as a software developer and
as a person.  Not only did I really push myself on difficult programming situations, I learned how to communicate effectively with my co-workers and superiors.  These skills are all invaluable.&lt;/p&gt;

&lt;p&gt;Not only did I grow on the technical side, my passion for software development has also grown.  One aspect of computer science I feared entering into college was that I would lack the passion and drive to be a part of it or that I wouldn’t be successful.  The internship answered both of these questions for me and it made me realize that I don’t need to have a natural aptitude for programming to find success in programming.  What I discovered was having confidence in what you can become to be the single most important factor.  Once you are confident in the fact that you can become successful, you work much harder to achieve that success.  Before my internship, I was terrified that I would be so lost and would not be able to keep up with the pressure of being a software engineer intern.  I distinctly remember my boss interviewing me stating: “if you need your hand held the whole time, don’t expect to do well here”.  He said it in a stern and intimidating way and I carried a sense of fear with me from the moment I started.&lt;/p&gt;

&lt;p&gt;Ultimately, I am glad he told me this as it gave me a healthy amount of anxiety and I did what I could to prepare for work.  After work started, I would go home and start learning other technology stacks on the side to continue to grow outside of work.  Although I am happy with the progress I have made, I am painfully aware of the fact that there is much more for me to learn and there is plenty of room for me to grow.  This is both a daunting, and yet, exciting prospect.  It is daunting because the enormity of things to learn and figuring out what is even worth learning, but exciting because I believe I can carve a path that will lead me to success and fulfillment.&lt;/p&gt;

&lt;p&gt;I started this blog as a way to document my thoughts on this journey of not only a software developer, but to document my life and have it to look back upon.&lt;/p&gt;</content><author><name></name></author><summary type="html">My Programming Goals for 2018 2017 for me was a very successful year in many ways. It was successful for me because my first internship allowed me to grow substantially as a software developer and as a person. Not only did I really push myself on difficult programming situations, I learned how to communicate effectively with my co-workers and superiors. These skills are all invaluable. Not only did I grow on the technical side, my passion for software development has also grown. One aspect of computer science I feared entering into college was that I would lack the passion and drive to be a part of it or that I wouldn’t be successful. The internship answered both of these questions for me and it made me realize that I don’t need to have a natural aptitude for programming to find success in programming. What I discovered was having confidence in what you can become to be the single most important factor. Once you are confident in the fact that you can become successful, you work much harder to achieve that success. Before my internship, I was terrified that I would be so lost and would not be able to keep up with the pressure of being a software engineer intern. I distinctly remember my boss interviewing me stating: “if you need your hand held the whole time, don’t expect to do well here”. He said it in a stern and intimidating way and I carried a sense of fear with me from the moment I started. Ultimately, I am glad he told me this as it gave me a healthy amount of anxiety and I did what I could to prepare for work. After work started, I would go home and start learning other technology stacks on the side to continue to grow outside of work. Although I am happy with the progress I have made, I am painfully aware of the fact that there is much more for me to learn and there is plenty of room for me to grow. This is both a daunting, and yet, exciting prospect. It is daunting because the enormity of things to learn and figuring out what is even worth learning, but exciting because I believe I can carve a path that will lead me to success and fulfillment. I started this blog as a way to document my thoughts on this journey of not only a software developer, but to document my life and have it to look back upon.</summary></entry><entry><title type="html">Welcome to lost coding</title><link href="www.lostcoding.com/2017/12/28/Welcome-to-Lost-Coding.html" rel="alternate" type="text/html" title="Welcome to lost coding" /><published>2017-12-28T00:00:00-06:00</published><updated>2017-12-28T00:00:00-06:00</updated><id>www.lostcoding.com/2017/12/28/Welcome%20to%20Lost%20Coding</id><content type="html" xml:base="www.lostcoding.com/2017/12/28/Welcome-to-Lost-Coding.html">&lt;h1 id=&quot;in-the-perpetual-state-of-being-lost-particularly-in-code&quot;&gt;In the perpetual state of being lost, particularly in code&lt;/h1&gt;</content><author><name></name></author><summary type="html">In the perpetual state of being lost, particularly in code</summary></entry></feed>